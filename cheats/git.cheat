% git

;Variables
$ branch: git branch | awk '{print $NF}'
$ old_remote_name: git remote -v | cut -f1 | uniq

# Set global git user name
git config --global user.name <name>

# Set global git user email
git config --global user.email <email>

# Initializes a git repository
git init

# Clone  repository
git clone <repository>

# View remotes for a git repository
git remote -v

# Add remote for a git repository
git remote add <remote_name> <remote_url>

# Renames remote for a git repository
git remote rename <old_remote_name> <new_remote_name>

# Remove remote for a git repository
git remote remove <old_remote_name>

# Checkout branch
git checkout <branch>

# Display status 
git status

# Stage all files
git add -A

# Create commit 
git commit -m "<description>"

# Merges branch into current
git merge <branch>

# Abort merge,
git merge --abort

# Displays log of commits
git log

# Displays formatted log of commits 
git log --all --decorate --oneline --graph

# Clear everything
git clean -dxf

# Amend latest commit
git commit --amend --no-edit

# Show latest tag
git tag --sort version:refname | tail -n 1

# Delete latest tag
git tag -d $(git tag --sort version:refname | tail -n 1)

% git, alias

; Custom aliases & utilities
; ==========================

# New branch with naming
gnb <new_branch_name>

# Show status
gst

# Commit with message
gcm <description>

# Add all files and commit with message
gaacm <description>

# Switch branch
gsw

# Rebase current branch interactively
gbir

# Show latest tag
gtag

# Delete latest tag
gdtag

# Push latest tag
gptag

# Show diff to latest tag
gdifft

# Create new tag following date versioning
gntag

# Amend latest commit
gfu

# Abort rebase
grba

; Aliases from ZSH git aliases
; ============================

# Start interactive rebase
grbi

# Diff files
g diff
